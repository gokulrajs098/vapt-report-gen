

// frontend/src/components/DraggableVulnerabilityList.js
import React, { useState, useContext } from 'react';
import { AppContext } from '../AppContext';
import Card from './Card';

const DraggableVulnerabilityList = ({ onEditClick }) => {
  const { vulnerabilities, handleReorderVulnerabilities, reportType } = useContext(AppContext);
  const [draggedItemIndex, setDraggedItemIndex] = useState(null);

  const handleDragStart = (e, index) => {
    setDraggedItemIndex(index);
    e.dataTransfer.effectAllowed = "move";
  };

  const handleDragOver = (e, index) => {
    e.preventDefault();
    if (draggedItemIndex !== null && draggedItemIndex !== index) {
      const newVulnerabilities = Array.from(vulnerabilities);
      const [movedItem] = newVulnerabilities.splice(draggedItemIndex, 1);
      newVulnerabilities.splice(index, 0, movedItem);
      // Optimistic update for visual reordering
      setVulnerabilities(newVulnerabilities);
      setDraggedItemIndex(index);
    }
  };

  const handleDragEnd = () => {
    const reorderedIds = vulnerabilities.map(v => v.id);
    handleReorderVulnerabilities(reorderedIds);
    setDraggedItemIndex(null);
  };

  return (
    <Card>
      <h2 className="text-2xl font-bold text-gray-800 mb-4">{reportType === 'web' ? 'Web Report Index' : 'Network Report Index'}</h2>
      {vulnerabilities.length > 0 ? (
        <ul className="space-y-2">
          {vulnerabilities.map((vuln, index) => (
            <li
              key={vuln.id}
              draggable
              onDragStart={(e) => handleDragStart(e, index)}
              onDragOver={(e) => handleDragOver(e, index)}
              onDragEnd={handleDragEnd}
              className={`p-3 bg-gray-50 rounded-md border border-gray-200 shadow-sm cursor-grab active:cursor-grabbing flex justify-between items-center
                          ${draggedItemIndex === index ? 'opacity-50 border-dashed border-2' : ''}`}
            >
              <span className="font-semibold text-sm">Vuln {index + 1}: {vuln.name}</span>
              <button
                onClick={() => onEditClick(vuln)}
                className="ml-2 px-3 py-1 text-xs bg-gray-300 text-gray-800 rounded-md hover:bg-gray-400"
              >
                Edit
              </button>
            </li>
          ))}
        </ul>
      ) : (
        <p className="text-gray-500 text-sm text-center py-4">Add vulnerabilities to see the index.</p>
      )}
    </Card>
  );
};

export default DraggableVulnerabilityList;
